---
const tabs = ['Skills', 'Experience', 'Interests'];
const activeTab = 'Skills';
---

<section id="about" aria-labelledby="about-title" class="fade-section bg-black text-white">
  <div class="container mx-auto px-6">
    <div class="mb-12 flex flex-col gap-3">
      <h2
        id="about-title"
        class="text-4xl font-extrabold text-green-400 drop-shadow-[0_0_16px_#00FF80] sm:text-5xl"
      >
        Codex: Juan Almeida
      </h2>
      <p class="max-w-3xl text-lg text-gray-300 sm:text-xl">
        A full-stack software engineer crafting digital realities with code. Specializing in
        JavaScript, React, and AI-driven solutions.
      </p>
    </div>

    <!-- Tabs -->
    <div class="mb-10 flex gap-8 overflow-x-auto border-b border-green-800">
      {
        tabs.map(tab => (
          <button
            data-tab={tab}
            class={`pb-3 text-sm font-semibold tracking-wide transition ${
              tab === activeTab
                ? 'border-b-2 border-green-400 text-green-400'
                : 'text-gray-400 hover:text-green-300'
            }`}
          >
            {tab}
          </button>
        ))
      }
    </div>

    <!-- Tab Panels -->
    <div id="tab-content" class="space-y-10">
      <!-- Default: Skills -->
      <div id="skills-panel" class="panel-fade">
        <!-- Core Technologies -->
        <div>
          <h3 class="mb-4 text-2xl font-bold text-white">Core Technologies</h3>
          <div class="grid grid-cols-[repeat(auto-fit,minmax(180px,1fr))] gap-4">
            {
              [
                { icon: 'code', title: 'JavaScript', desc: 'ES6+, async/await' },
                { icon: 'flip_to_front', title: 'React', desc: 'State management' },
                { icon: 'web', title: 'Next.js', desc: 'Server-side rendering' },
                { icon: 'data_object', title: 'Python', desc: 'Data analysis, scripting' },
                { icon: 'database', title: 'Django', desc: 'REST APIs, ORM' },
                { icon: 'neurology', title: 'AI/ML', desc: 'Neural networks' },
              ].map(tech => (
                <div class="flex flex-col gap-2 rounded-lg border border-green-800 bg-green-900/10 p-4 transition-all hover:border-green-500 hover:bg-green-800/10">
                  <div class="text-2xl text-green-400">
                    <span class="material-symbols-outlined">{tech.icon}</span>
                  </div>
                  <div>
                    <h4 class="text-base font-bold text-white">{tech.title}</h4>
                    <p class="text-sm text-gray-400">{tech.desc}</p>
                  </div>
                </div>
              ))
            }
          </div>
        </div>

        <!-- Tools & Platforms -->
        <div>
          <h3 class="mb-4 text-2xl font-bold text-white">Tools & Platforms</h3>
          <div class="grid grid-cols-[repeat(auto-fit,minmax(180px,1fr))] gap-4">
            {
              [
                { icon: 'terminal', title: 'Git & CLI', desc: 'Version control' },
                { icon: 'deployed_code', title: 'Docker', desc: 'Containerization' },
                { icon: 'cloud', title: 'AWS', desc: 'Cloud services' },
                { icon: 'design_services', title: 'Figma', desc: 'UI/UX Design' },
              ].map(tool => (
                <div class="flex flex-col gap-2 rounded-lg border border-green-800 bg-green-900/10 p-4 transition-all hover:border-green-500 hover:bg-green-800/10">
                  <div class="text-2xl text-green-400">
                    <span class="material-symbols-outlined">{tool.icon}</span>
                  </div>
                  <div>
                    <h4 class="text-base font-bold text-white">{tool.title}</h4>
                    <p class="text-sm text-gray-400">{tool.desc}</p>
                  </div>
                </div>
              ))
            }
          </div>
        </div>
      </div>

      <!-- Placeholder for other tabs -->
      <div id="experience-panel" class="panel-fade hidden">
        <h3 class="mb-4 text-2xl font-bold text-white">Experience</h3>
        <ul class="space-y-4 text-gray-300">
          <li>
            <span class="text-green-400">Upwork</span> — Frontend Engineer, SEO Platform (React + Astro
            Migration)
          </li>
          <li>
            <span class="text-green-400">NerdWallet</span> — React Engineer building data-driven UIs
          </li>
          <li>
            <span class="text-green-400">Freelance</span> — Django + GraphQL backends for SaaS clients
          </li>
        </ul>
      </div>

      <div id="interests-panel" class="panel-fade hidden">
        <h3 class="mb-4 text-2xl font-bold text-white">Interests</h3>
        <p class="text-gray-300">
          I’m fascinated by AI-assisted development, generative interfaces, and how design systems
          evolve with machine learning. Outside tech, I enjoy cycling, triathlon, and creating art
          through code.
        </p>
      </div>
    </div>
  </div>

  <!-- Divider -->
  <div
    class="absolute left-0 top-0 h-[2px] w-full bg-gradient-to-r from-transparent via-green-500 to-transparent opacity-40"
  >
  </div>

  <!-- Interactivity Script -->
  <script is:inline>
    const tabs = document.querySelectorAll('[data-tab]');
    const panels = {
      Skills: document.getElementById('skills-panel'),
      Experience: document.getElementById('experience-panel'),
      Interests: document.getElementById('interests-panel'),
    };

    // Restore from localStorage
    let activeTab = localStorage.getItem('activeAboutTab') || 'Skills';
    updateTabs(activeTab);

    tabs.forEach(button => {
      button.addEventListener('click', () => {
        const selectedTab = button.getAttribute('data-tab');
        if (selectedTab === activeTab) return;

        activeTab = selectedTab;
        localStorage.setItem('activeAboutTab', activeTab);
        updateTabs(activeTab);
      });
    });

    function updateTabs(tab) {
      tabs.forEach(btn => {
        const isActive = btn.getAttribute('data-tab') === tab;
        btn.classList.toggle('text-green-400', isActive);
        btn.classList.toggle('border-b-2', isActive);
        btn.classList.toggle('border-green-400', isActive);
        btn.classList.toggle('text-gray-400', !isActive);
      });

      Object.entries(panels).forEach(([name, panel]) => {
        if (!panel) return;
        panel.classList.toggle('hidden', name !== tab);
        if (name === tab) {
          panel.classList.add('panel-fade');
          // reset animation each time
          panel.style.animation = 'none';
          panel.offsetHeight; // force reflow
          panel.style.animation = null;
        }
      });
    }
  </script>
</section>

<style is:global>
  @keyframes fade-in {
    from {
      opacity: 0;
      transform: translateY(10px);
    }
    to {
      opacity: 1;
      transform: translateY(0);
    }
  }
  .panel-fade {
    animation: fade-in 0.6s ease-out both;
  }
</style>
